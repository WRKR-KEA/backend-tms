name: Update Release Version
on:
  pull_request:
    types: [ closed ]
    branches: [ main ]

jobs:
  update:
    if: github.event.pull_request.merged == true
    runs-on: self-hosted
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Set up JDK 21
        uses: actions/setup-java@v2
        with:
          java-version: '21'
          distribution: 'temurin'

      - name: Save PR labels to file
        run: echo '${{ toJson(github.event.pull_request.labels) }}' > pr_labels.json

      - name: Determine Version Increment
        id: vars
        run: |
          LABELS=$(jq -r '.[].name' pr_labels.json | tr '\n' ' ')
          if echo $LABELS | grep -q "major"; then
            echo "::set-output name=INCREMENT::major"
          elif echo $LABELS | grep -q "minor"; then
            echo "::set-output name=INCREMENT::minor"
          elif echo $LABELS | grep -q "patch"; then
            echo "::set-output name=INCREMENT::patch"
          else
            echo "::set-output name=INCREMENT::"
          fi

      - name: Update Project Version with Gradle
        if: steps.vars.outputs.INCREMENT
        run: |
          ./gradlew updateVersion -Pincrement=${{ steps.vars.outputs.INCREMENT }}
          git config --global user.name 'github-actions[bot]'
          git config --global user.email 'github-actions[bot]@users.noreply.github.com'
          git add .
          git commit -m ":bookmark: Release: update release version based on PR(#${{ github.event.pull_request.number }})"
          git push

      - name: Create Git Tag
        if: steps.vars.outputs.INCREMENT
        run: |
          NEW_VERSION=$(cat src/main/resources/application.yml | grep 'version:' | awk '{print $2}')
          git tag -a "v$NEW_VERSION" -m "Release version v$NEW_VERSION"
          git push origin "v$NEW_VERSION"